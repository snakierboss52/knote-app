name: ci knote-app

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Running unit test with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
      - name: Upload build jar
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: jorge-0.0.1.jar
          path: build/libs/

  create-image:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download builded jar
        uses: actions/download-artifact@v4
        with:
          name: jorge-0.0.1.jar
          path: build/libs/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: snakierboss/knote-app:0.0.1

  security-scan:
    needs: [create-image]
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          severity: CRITICAL,HIGH
          image-ref: 'docker.io/snakierboss/knote-app:0.0.1'
          format: 'sarif'
          output: 'trivy-results.sarif'
        env:
          TRIVY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TRIVY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  report-failure-notification:
    needs: [security-scan]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: send email notification about failure
        run: |
          echo "something went wrong"

  report-success-notification:
    needs: [security-scan]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: send email notification about success execution
        run: |
          echo "workflow execute succesfully"
  